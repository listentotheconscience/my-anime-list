version: "3.7"
services:
  app:
    build:
      args:
        user: mal
        uid: 1000
      context: ./
      dockerfile: .docker/nginx/Dockerfile
    container_name: app-mal
    image: app-mal
    restart: unless-stopped
    working_dir: /var/www/
    environment:
      - DB_HOST=postgres
    volumes:
      - ./:/var/www
    networks:
      - mal-net
    links:
      - postgres

  nginx:
    image: nginx:alpine
    container_name: nginx-mal
    restart: unless-stopped
    ports:
      - ${APP_PORT}:80
    volumes:
      - ./:/var/www
      - ./.docker/nginx/app.local.conf:/etc/nginx/conf.d/default.conf
    networks:
      - mal-net

  postgres:
    container_name: mal-postgres
    image: postgres
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: mal
    ports:
      - ${DB_PORT}:5432
    networks:
      - mal-net
    restart: unless-stopped

  redis:
    container_name: mal-redis
    image: redis:alpine
    restart: unless-stopped
    networks:
      - mal-net

  app-horizon:
    image: app-mal
    entrypoint: /entrypoint-hor
    container_name: mal-horizon
    restart: always
    command: php -dmemory_limit=512M artisan horizon
    working_dir: /var/www/
    environment:
      - DB_HOST=postgres
    volumes:
      - ./:/var/www
    depends_on:
      -   app
    networks:
      - mal-net

networks:
  mal-net:
    driver: bridge
